{"ast":null,"code":"import _slicedToArray from \"D:/Proyectos/Facultad/API2023C2/demoTemplate/material-kit-react-1/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"autoFocus\", \"children\", \"component\", \"components\", \"componentsProps\", \"defaultValue\", \"defaultListboxOpen\", \"disabled\", \"getSerializedValue\", \"listboxId\", \"listboxOpen\", \"name\", \"onChange\", \"onListboxOpenChange\", \"optionStringifier\", \"renderValue\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef, unstable_useControlled as useControlled } from '@mui/utils';\nimport { flattenOptionGroups, getOptionsFromChildren } from './utils';\nimport useSelect from './useSelect';\nimport { useSlotProps } from '../utils';\nimport PopperUnstyled from '../PopperUnstyled';\nimport { SelectUnstyledContext } from './SelectUnstyledContext';\nimport composeClasses from '../composeClasses';\nimport { getSelectUnstyledUtilityClass } from './selectUnstyledClasses';\nimport defaultOptionStringifier from './defaultOptionStringifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction defaultRenderSingleValue(selectedOption) {\n  var _selectedOption$label;\n  return (_selectedOption$label = selectedOption == null ? void 0 : selectedOption.label) != null ? _selectedOption$label : '';\n}\nfunction defaultFormValueProvider(selectedOption) {\n  if ((selectedOption == null ? void 0 : selectedOption.value) == null) {\n    return '';\n  }\n  if (typeof selectedOption.value === 'string' || typeof selectedOption.value === 'number') {\n    return selectedOption.value;\n  }\n  return JSON.stringify(selectedOption.value);\n}\nfunction useUtilityClasses(ownerState) {\n  var active = ownerState.active,\n    disabled = ownerState.disabled,\n    open = ownerState.open,\n    focusVisible = ownerState.focusVisible;\n  var slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible', active && 'active', open && 'expanded'],\n    listbox: ['listbox', disabled && 'disabled'],\n    popper: ['popper']\n  };\n  return composeClasses(slots, getSelectUnstyledUtilityClass, {});\n}\n/**\n * The foundation for building custom-styled select components.\n *\n * Demos:\n *\n * - [Unstyled Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [SelectUnstyled API](https://mui.com/base/api/select-unstyled/)\n */\n\nvar SelectUnstyled = /*#__PURE__*/React.forwardRef(function SelectUnstyled(props, forwardedRef) {\n  var _ref, _components$Listbox, _components$Popper;\n  var autoFocus = props.autoFocus,\n    children = props.children,\n    component = props.component,\n    _props$components = props.components,\n    components = _props$components === void 0 ? {} : _props$components,\n    _props$componentsProp = props.componentsProps,\n    componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n    defaultValue = props.defaultValue,\n    _props$defaultListbox = props.defaultListboxOpen,\n    defaultListboxOpen = _props$defaultListbox === void 0 ? false : _props$defaultListbox,\n    disabledProp = props.disabled,\n    _props$getSerializedV = props.getSerializedValue,\n    getSerializedValue = _props$getSerializedV === void 0 ? defaultFormValueProvider : _props$getSerializedV,\n    listboxId = props.listboxId,\n    listboxOpenProp = props.listboxOpen,\n    name = props.name,\n    onChange = props.onChange,\n    onListboxOpenChange = props.onListboxOpenChange,\n    _props$optionStringif = props.optionStringifier,\n    optionStringifier = _props$optionStringif === void 0 ? defaultOptionStringifier : _props$optionStringif,\n    renderValueProp = props.renderValue,\n    valueProp = props.value,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var renderValue = renderValueProp != null ? renderValueProp : defaultRenderSingleValue;\n  var _React$useState = React.useState([]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    groupedOptions = _React$useState2[0],\n    setGroupedOptions = _React$useState2[1];\n  var options = React.useMemo(function () {\n    return flattenOptionGroups(groupedOptions);\n  }, [groupedOptions]);\n  var _useControlled = useControlled({\n      controlled: listboxOpenProp,\n      default: defaultListboxOpen,\n      name: 'SelectUnstyled',\n      state: 'listboxOpen'\n    }),\n    _useControlled2 = _slicedToArray(_useControlled, 2),\n    listboxOpen = _useControlled2[0],\n    setListboxOpen = _useControlled2[1];\n  React.useEffect(function () {\n    setGroupedOptions(getOptionsFromChildren(children));\n  }, [children]);\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    buttonDefined = _React$useState4[0],\n    setButtonDefined = _React$useState4[1];\n  var buttonRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n  var Button = (_ref = component != null ? component : components.Root) != null ? _ref : 'button';\n  var ListboxRoot = (_components$Listbox = components.Listbox) != null ? _components$Listbox : 'ul';\n  var Popper = (_components$Popper = components.Popper) != null ? _components$Popper : PopperUnstyled;\n  var handleButtonRefChange = React.useCallback(function (element) {\n    setButtonDefined(element != null);\n  }, []);\n  var handleButtonRef = useForkRef(forwardedRef, buttonRef, handleButtonRefChange);\n  React.useEffect(function () {\n    if (autoFocus) {\n      buttonRef.current.focus();\n    }\n  }, [autoFocus]);\n  var handleOpenChange = function handleOpenChange(isOpen) {\n    setListboxOpen(isOpen);\n    onListboxOpenChange == null ? void 0 : onListboxOpenChange(isOpen);\n  };\n  var _useSelect = useSelect({\n      buttonRef: handleButtonRef,\n      defaultValue: defaultValue,\n      disabled: disabledProp,\n      listboxId: listboxId,\n      multiple: false,\n      onChange: onChange,\n      onOpenChange: handleOpenChange,\n      open: listboxOpen,\n      options: options,\n      optionStringifier: optionStringifier,\n      value: valueProp\n    }),\n    buttonActive = _useSelect.buttonActive,\n    buttonFocusVisible = _useSelect.buttonFocusVisible,\n    disabled = _useSelect.disabled,\n    getButtonProps = _useSelect.getButtonProps,\n    getListboxProps = _useSelect.getListboxProps,\n    getOptionProps = _useSelect.getOptionProps,\n    getOptionState = _useSelect.getOptionState,\n    value = _useSelect.value;\n  var ownerState = _extends({}, props, {\n    active: buttonActive,\n    defaultListboxOpen: defaultListboxOpen,\n    disabled: disabled,\n    focusVisible: buttonFocusVisible,\n    open: listboxOpen,\n    renderValue: renderValue,\n    value: value\n  });\n  var classes = useUtilityClasses(ownerState);\n  var selectedOption = React.useMemo(function () {\n    var _options$find;\n    return (_options$find = options.find(function (o) {\n      return value === o.value;\n    })) != null ? _options$find : null;\n  }, [options, value]);\n  var buttonProps = useSlotProps({\n    elementType: Button,\n    getSlotProps: getButtonProps,\n    externalSlotProps: componentsProps.root,\n    externalForwardedProps: other,\n    ownerState: ownerState,\n    className: classes.root\n  });\n  var listboxProps = useSlotProps({\n    elementType: ListboxRoot,\n    getSlotProps: getListboxProps,\n    externalSlotProps: componentsProps.listbox,\n    additionalProps: {\n      ref: listboxRef\n    },\n    ownerState: ownerState,\n    className: classes.listbox\n  });\n  var popperProps = useSlotProps({\n    elementType: Popper,\n    externalSlotProps: componentsProps.popper,\n    additionalProps: {\n      anchorEl: buttonRef.current,\n      disablePortal: true,\n      open: listboxOpen,\n      placement: 'bottom-start',\n      role: undefined\n    },\n    ownerState: ownerState,\n    className: classes.popper\n  });\n  var context = {\n    getOptionProps: getOptionProps,\n    getOptionState: getOptionState,\n    listboxRef: listboxRef\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Button, _extends({}, buttonProps, {\n      children: renderValue(selectedOption)\n    })), buttonDefined && /*#__PURE__*/_jsx(Popper, _extends({}, popperProps, {\n      children: /*#__PURE__*/_jsx(ListboxRoot, _extends({}, listboxProps, {\n        children: /*#__PURE__*/_jsx(SelectUnstyledContext.Provider, {\n          value: context,\n          children: children\n        })\n      }))\n    })), name && /*#__PURE__*/_jsx(\"input\", {\n      type: \"hidden\",\n      name: name,\n      value: getSerializedValue(selectedOption)\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectUnstyled.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the select element is focused during the first mount\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside the Select.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes\n  /* @typescript-to-proptypes-ignore */.shape({\n    Listbox: PropTypes.elementType,\n    Popper: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    listbox: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    popper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the select will be initially open.\n   * @default false\n   */\n  defaultListboxOpen: PropTypes.bool,\n  /**\n   * The default selected value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the select is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * A function to convert the currently selected value to a string.\n   * Used to set a value of a hidden input associated with the select,\n   * so that the selected value can be posted with a form.\n   */\n  getSerializedValue: PropTypes.func,\n  /**\n   * `id` attribute of the listbox element.\n   * Also used to derive the `id` attributes of options.\n   */\n  listboxId: PropTypes.string,\n  /**\n   * Controls the open state of the select's listbox.\n   * @default undefined\n   */\n  listboxOpen: PropTypes.bool,\n  /**\n   * Name of the element. For example used by the server to identify the fields in form submits.\n   * If the name is provided, the component will render a hidden input element that can be submitted to a server.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when an option is selected.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see listboxOpen).\n   */\n  onListboxOpenChange: PropTypes.func,\n  /**\n   * A function used to convert the option label to a string.\n   * It's useful when labels are elements and need to be converted to plain text\n   * to enable navigation using character keys on a keyboard.\n   *\n   * @default defaultOptionStringifier\n   */\n  optionStringifier: PropTypes.func,\n  /**\n   * Function that customizes the rendering of the selected value.\n   */\n  renderValue: PropTypes.func,\n  /**\n   * The selected value.\n   * Set to `null` to deselect all options.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SelectUnstyled;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_useForkRef","useForkRef","unstable_useControlled","useControlled","flattenOptionGroups","getOptionsFromChildren","useSelect","useSlotProps","PopperUnstyled","SelectUnstyledContext","composeClasses","getSelectUnstyledUtilityClass","defaultOptionStringifier","jsx","_jsx","jsxs","_jsxs","defaultRenderSingleValue","selectedOption","_selectedOption$label","label","defaultFormValueProvider","value","JSON","stringify","useUtilityClasses","ownerState","active","disabled","open","focusVisible","slots","root","listbox","popper","SelectUnstyled","forwardRef","props","forwardedRef","_ref","_components$Listbox","_components$Popper","autoFocus","children","component","_props$components","components","_props$componentsProp","componentsProps","defaultValue","_props$defaultListbox","defaultListboxOpen","disabledProp","_props$getSerializedV","getSerializedValue","listboxId","listboxOpenProp","listboxOpen","name","onChange","onListboxOpenChange","_props$optionStringif","optionStringifier","renderValueProp","renderValue","valueProp","other","_React$useState","useState","_React$useState2","_slicedToArray","groupedOptions","setGroupedOptions","options","useMemo","_useControlled","controlled","default","state","_useControlled2","setListboxOpen","useEffect","_React$useState3","_React$useState4","buttonDefined","setButtonDefined","buttonRef","useRef","listboxRef","Button","Root","ListboxRoot","Listbox","Popper","handleButtonRefChange","useCallback","element","handleButtonRef","current","focus","handleOpenChange","isOpen","_useSelect","multiple","onOpenChange","buttonActive","buttonFocusVisible","getButtonProps","getListboxProps","getOptionProps","getOptionState","classes","_options$find","find","o","buttonProps","elementType","getSlotProps","externalSlotProps","externalForwardedProps","className","listboxProps","additionalProps","ref","popperProps","anchorEl","disablePortal","placement","role","undefined","context","Fragment","Provider","type","process","env","NODE_ENV","propTypes","bool","node","shape","oneOfType","func","object","any","string"],"sources":["D:/Proyectos/Facultad/API2023C2/demoTemplate/material-kit-react-1/node_modules/@mui/base/SelectUnstyled/SelectUnstyled.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoFocus\", \"children\", \"component\", \"components\", \"componentsProps\", \"defaultValue\", \"defaultListboxOpen\", \"disabled\", \"getSerializedValue\", \"listboxId\", \"listboxOpen\", \"name\", \"onChange\", \"onListboxOpenChange\", \"optionStringifier\", \"renderValue\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef, unstable_useControlled as useControlled } from '@mui/utils';\nimport { flattenOptionGroups, getOptionsFromChildren } from './utils';\nimport useSelect from './useSelect';\nimport { useSlotProps } from '../utils';\nimport PopperUnstyled from '../PopperUnstyled';\nimport { SelectUnstyledContext } from './SelectUnstyledContext';\nimport composeClasses from '../composeClasses';\nimport { getSelectUnstyledUtilityClass } from './selectUnstyledClasses';\nimport defaultOptionStringifier from './defaultOptionStringifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction defaultRenderSingleValue(selectedOption) {\n  var _selectedOption$label;\n\n  return (_selectedOption$label = selectedOption == null ? void 0 : selectedOption.label) != null ? _selectedOption$label : '';\n}\n\nfunction defaultFormValueProvider(selectedOption) {\n  if ((selectedOption == null ? void 0 : selectedOption.value) == null) {\n    return '';\n  }\n\n  if (typeof selectedOption.value === 'string' || typeof selectedOption.value === 'number') {\n    return selectedOption.value;\n  }\n\n  return JSON.stringify(selectedOption.value);\n}\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    active,\n    disabled,\n    open,\n    focusVisible\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible', active && 'active', open && 'expanded'],\n    listbox: ['listbox', disabled && 'disabled'],\n    popper: ['popper']\n  };\n  return composeClasses(slots, getSelectUnstyledUtilityClass, {});\n}\n/**\n * The foundation for building custom-styled select components.\n *\n * Demos:\n *\n * - [Unstyled Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [SelectUnstyled API](https://mui.com/base/api/select-unstyled/)\n */\n\n\nconst SelectUnstyled = /*#__PURE__*/React.forwardRef(function SelectUnstyled(props, forwardedRef) {\n  var _ref, _components$Listbox, _components$Popper;\n\n  const {\n    autoFocus,\n    children,\n    component,\n    components = {},\n    componentsProps = {},\n    defaultValue,\n    defaultListboxOpen = false,\n    disabled: disabledProp,\n    getSerializedValue = defaultFormValueProvider,\n    listboxId,\n    listboxOpen: listboxOpenProp,\n    name,\n    onChange,\n    onListboxOpenChange,\n    optionStringifier = defaultOptionStringifier,\n    renderValue: renderValueProp,\n    value: valueProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const renderValue = renderValueProp != null ? renderValueProp : defaultRenderSingleValue;\n  const [groupedOptions, setGroupedOptions] = React.useState([]);\n  const options = React.useMemo(() => flattenOptionGroups(groupedOptions), [groupedOptions]);\n  const [listboxOpen, setListboxOpen] = useControlled({\n    controlled: listboxOpenProp,\n    default: defaultListboxOpen,\n    name: 'SelectUnstyled',\n    state: 'listboxOpen'\n  });\n  React.useEffect(() => {\n    setGroupedOptions(getOptionsFromChildren(children));\n  }, [children]);\n  const [buttonDefined, setButtonDefined] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const Button = (_ref = component != null ? component : components.Root) != null ? _ref : 'button';\n  const ListboxRoot = (_components$Listbox = components.Listbox) != null ? _components$Listbox : 'ul';\n  const Popper = (_components$Popper = components.Popper) != null ? _components$Popper : PopperUnstyled;\n  const handleButtonRefChange = React.useCallback(element => {\n    setButtonDefined(element != null);\n  }, []);\n  const handleButtonRef = useForkRef(forwardedRef, buttonRef, handleButtonRefChange);\n  React.useEffect(() => {\n    if (autoFocus) {\n      buttonRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  const handleOpenChange = isOpen => {\n    setListboxOpen(isOpen);\n    onListboxOpenChange == null ? void 0 : onListboxOpenChange(isOpen);\n  };\n\n  const {\n    buttonActive,\n    buttonFocusVisible,\n    disabled,\n    getButtonProps,\n    getListboxProps,\n    getOptionProps,\n    getOptionState,\n    value\n  } = useSelect({\n    buttonRef: handleButtonRef,\n    defaultValue,\n    disabled: disabledProp,\n    listboxId,\n    multiple: false,\n    onChange,\n    onOpenChange: handleOpenChange,\n    open: listboxOpen,\n    options,\n    optionStringifier,\n    value: valueProp\n  });\n\n  const ownerState = _extends({}, props, {\n    active: buttonActive,\n    defaultListboxOpen,\n    disabled,\n    focusVisible: buttonFocusVisible,\n    open: listboxOpen,\n    renderValue,\n    value\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const selectedOption = React.useMemo(() => {\n    var _options$find;\n\n    return (_options$find = options.find(o => value === o.value)) != null ? _options$find : null;\n  }, [options, value]);\n  const buttonProps = useSlotProps({\n    elementType: Button,\n    getSlotProps: getButtonProps,\n    externalSlotProps: componentsProps.root,\n    externalForwardedProps: other,\n    ownerState,\n    className: classes.root\n  });\n  const listboxProps = useSlotProps({\n    elementType: ListboxRoot,\n    getSlotProps: getListboxProps,\n    externalSlotProps: componentsProps.listbox,\n    additionalProps: {\n      ref: listboxRef\n    },\n    ownerState,\n    className: classes.listbox\n  });\n  const popperProps = useSlotProps({\n    elementType: Popper,\n    externalSlotProps: componentsProps.popper,\n    additionalProps: {\n      anchorEl: buttonRef.current,\n      disablePortal: true,\n      open: listboxOpen,\n      placement: 'bottom-start',\n      role: undefined\n    },\n    ownerState,\n    className: classes.popper\n  });\n  const context = {\n    getOptionProps,\n    getOptionState,\n    listboxRef\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Button, _extends({}, buttonProps, {\n      children: renderValue(selectedOption)\n    })), buttonDefined && /*#__PURE__*/_jsx(Popper, _extends({}, popperProps, {\n      children: /*#__PURE__*/_jsx(ListboxRoot, _extends({}, listboxProps, {\n        children: /*#__PURE__*/_jsx(SelectUnstyledContext.Provider, {\n          value: context,\n          children: children\n        })\n      }))\n    })), name && /*#__PURE__*/_jsx(\"input\", {\n      type: \"hidden\",\n      name: name,\n      value: getSerializedValue(selectedOption)\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the select element is focused during the first mount\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Select.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    Listbox: PropTypes.elementType,\n    Popper: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    listbox: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    popper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * If `true`, the select will be initially open.\n   * @default false\n   */\n  defaultListboxOpen: PropTypes.bool,\n\n  /**\n   * The default selected value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the select is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A function to convert the currently selected value to a string.\n   * Used to set a value of a hidden input associated with the select,\n   * so that the selected value can be posted with a form.\n   */\n  getSerializedValue: PropTypes.func,\n\n  /**\n   * `id` attribute of the listbox element.\n   * Also used to derive the `id` attributes of options.\n   */\n  listboxId: PropTypes.string,\n\n  /**\n   * Controls the open state of the select's listbox.\n   * @default undefined\n   */\n  listboxOpen: PropTypes.bool,\n\n  /**\n   * Name of the element. For example used by the server to identify the fields in form submits.\n   * If the name is provided, the component will render a hidden input element that can be submitted to a server.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when an option is selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see listboxOpen).\n   */\n  onListboxOpenChange: PropTypes.func,\n\n  /**\n   * A function used to convert the option label to a string.\n   * It's useful when labels are elements and need to be converted to plain text\n   * to enable navigation using character keys on a keyboard.\n   *\n   * @default defaultOptionStringifier\n   */\n  optionStringifier: PropTypes.func,\n\n  /**\n   * Function that customizes the rendering of the selected value.\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * The selected value.\n   * Set to `null` to deselect all options.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SelectUnstyled;"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,6BAA6B,MAAM,yDAAyD;AACnG,IAAMC,SAAS,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,iBAAiB,EAAE,cAAc,EAAE,oBAAoB,EAAE,UAAU,EAAE,oBAAoB,EAAE,WAAW,EAAE,aAAa,EAAE,MAAM,EAAE,UAAU,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,aAAa,EAAE,OAAO,CAAC;AACrR,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,mBAAmB,IAAIC,UAAU,EAAEC,sBAAsB,IAAIC,aAAa,QAAQ,YAAY;AACvG,SAASC,mBAAmB,EAAEC,sBAAsB,QAAQ,SAAS;AACrE,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,YAAY,QAAQ,UAAU;AACvC,OAAOC,cAAc,MAAM,mBAAmB;AAC9C,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,OAAOC,cAAc,MAAM,mBAAmB;AAC9C,SAASC,6BAA6B,QAAQ,yBAAyB;AACvE,OAAOC,wBAAwB,MAAM,4BAA4B;AACjE,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,IAAI,IAAIC,KAAK,QAAQ,mBAAmB;AAEjD,SAASC,wBAAwBA,CAACC,cAAc,EAAE;EAChD,IAAIC,qBAAqB;EAEzB,OAAO,CAACA,qBAAqB,GAAGD,cAAc,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACE,KAAK,KAAK,IAAI,GAAGD,qBAAqB,GAAG,EAAE;AAC9H;AAEA,SAASE,wBAAwBA,CAACH,cAAc,EAAE;EAChD,IAAI,CAACA,cAAc,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACI,KAAK,KAAK,IAAI,EAAE;IACpE,OAAO,EAAE;EACX;EAEA,IAAI,OAAOJ,cAAc,CAACI,KAAK,KAAK,QAAQ,IAAI,OAAOJ,cAAc,CAACI,KAAK,KAAK,QAAQ,EAAE;IACxF,OAAOJ,cAAc,CAACI,KAAK;EAC7B;EAEA,OAAOC,IAAI,CAACC,SAAS,CAACN,cAAc,CAACI,KAAK,CAAC;AAC7C;AAEA,SAASG,iBAAiBA,CAACC,UAAU,EAAE;EACrC,IACEC,MAAM,GAIJD,UAAU,CAJZC,MAAM;IACNC,QAAQ,GAGNF,UAAU,CAHZE,QAAQ;IACRC,IAAI,GAEFH,UAAU,CAFZG,IAAI;IACJC,YAAY,GACVJ,UAAU,CADZI,YAAY;EAEd,IAAMC,KAAK,GAAG;IACZC,IAAI,EAAE,CAAC,MAAM,EAAEJ,QAAQ,IAAI,UAAU,EAAEE,YAAY,IAAI,cAAc,EAAEH,MAAM,IAAI,QAAQ,EAAEE,IAAI,IAAI,UAAU,CAAC;IAC9GI,OAAO,EAAE,CAAC,SAAS,EAAEL,QAAQ,IAAI,UAAU,CAAC;IAC5CM,MAAM,EAAE,CAAC,QAAQ;EACnB,CAAC;EACD,OAAOxB,cAAc,CAACqB,KAAK,EAAEpB,6BAA6B,EAAE,CAAC,CAAC,CAAC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAMwB,cAAc,GAAG,aAAarC,KAAK,CAACsC,UAAU,CAAC,SAASD,cAAcA,CAACE,KAAK,EAAEC,YAAY,EAAE;EAChG,IAAIC,IAAI,EAAEC,mBAAmB,EAAEC,kBAAkB;EAEjD,IACEC,SAAS,GAiBPL,KAAK,CAjBPK,SAAS;IACTC,QAAQ,GAgBNN,KAAK,CAhBPM,QAAQ;IACRC,SAAS,GAePP,KAAK,CAfPO,SAAS;IAAAC,iBAAA,GAePR,KAAK,CAdPS,UAAU;IAAVA,UAAU,GAAAD,iBAAA,cAAG,CAAC,CAAC,GAAAA,iBAAA;IAAAE,qBAAA,GAcbV,KAAK,CAbPW,eAAe;IAAfA,eAAe,GAAAD,qBAAA,cAAG,CAAC,CAAC,GAAAA,qBAAA;IACpBE,YAAY,GAYVZ,KAAK,CAZPY,YAAY;IAAAC,qBAAA,GAYVb,KAAK,CAXPc,kBAAkB;IAAlBA,kBAAkB,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;IAChBE,YAAY,GAUpBf,KAAK,CAVPT,QAAQ;IAAAyB,qBAAA,GAUNhB,KAAK,CATPiB,kBAAkB;IAAlBA,kBAAkB,GAAAD,qBAAA,cAAGhC,wBAAwB,GAAAgC,qBAAA;IAC7CE,SAAS,GAQPlB,KAAK,CARPkB,SAAS;IACIC,eAAe,GAO1BnB,KAAK,CAPPoB,WAAW;IACXC,IAAI,GAMFrB,KAAK,CANPqB,IAAI;IACJC,QAAQ,GAKNtB,KAAK,CALPsB,QAAQ;IACRC,mBAAmB,GAIjBvB,KAAK,CAJPuB,mBAAmB;IAAAC,qBAAA,GAIjBxB,KAAK,CAHPyB,iBAAiB;IAAjBA,iBAAiB,GAAAD,qBAAA,cAAGjD,wBAAwB,GAAAiD,qBAAA;IAC/BE,eAAe,GAE1B1B,KAAK,CAFP2B,WAAW;IACJC,SAAS,GACd5B,KAAK,CADPf,KAAK;IAED4C,KAAK,GAAGtE,6BAA6B,CAACyC,KAAK,EAAExC,SAAS,CAAC;EAE7D,IAAMmE,WAAW,GAAGD,eAAe,IAAI,IAAI,GAAGA,eAAe,GAAG9C,wBAAwB;EACxF,IAAAkD,eAAA,GAA4CrE,KAAK,CAACsE,QAAQ,CAAC,EAAE,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAvDI,cAAc,GAAAF,gBAAA;IAAEG,iBAAiB,GAAAH,gBAAA;EACxC,IAAMI,OAAO,GAAG3E,KAAK,CAAC4E,OAAO,CAAC;IAAA,OAAMtE,mBAAmB,CAACmE,cAAc,CAAC;EAAA,GAAE,CAACA,cAAc,CAAC,CAAC;EAC1F,IAAAI,cAAA,GAAsCxE,aAAa,CAAC;MAClDyE,UAAU,EAAEpB,eAAe;MAC3BqB,OAAO,EAAE1B,kBAAkB;MAC3BO,IAAI,EAAE,gBAAgB;MACtBoB,KAAK,EAAE;IACT,CAAC,CAAC;IAAAC,eAAA,GAAAT,cAAA,CAAAK,cAAA;IALKlB,WAAW,GAAAsB,eAAA;IAAEC,cAAc,GAAAD,eAAA;EAMlCjF,KAAK,CAACmF,SAAS,CAAC,YAAM;IACpBT,iBAAiB,CAACnE,sBAAsB,CAACsC,QAAQ,CAAC,CAAC;EACrD,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EACd,IAAAuC,gBAAA,GAA0CpF,KAAK,CAACsE,QAAQ,CAAC,KAAK,CAAC;IAAAe,gBAAA,GAAAb,cAAA,CAAAY,gBAAA;IAAxDE,aAAa,GAAAD,gBAAA;IAAEE,gBAAgB,GAAAF,gBAAA;EACtC,IAAMG,SAAS,GAAGxF,KAAK,CAACyF,MAAM,CAAC,IAAI,CAAC;EACpC,IAAMC,UAAU,GAAG1F,KAAK,CAACyF,MAAM,CAAC,IAAI,CAAC;EACrC,IAAME,MAAM,GAAG,CAAClD,IAAI,GAAGK,SAAS,IAAI,IAAI,GAAGA,SAAS,GAAGE,UAAU,CAAC4C,IAAI,KAAK,IAAI,GAAGnD,IAAI,GAAG,QAAQ;EACjG,IAAMoD,WAAW,GAAG,CAACnD,mBAAmB,GAAGM,UAAU,CAAC8C,OAAO,KAAK,IAAI,GAAGpD,mBAAmB,GAAG,IAAI;EACnG,IAAMqD,MAAM,GAAG,CAACpD,kBAAkB,GAAGK,UAAU,CAAC+C,MAAM,KAAK,IAAI,GAAGpD,kBAAkB,GAAGjC,cAAc;EACrG,IAAMsF,qBAAqB,GAAGhG,KAAK,CAACiG,WAAW,CAAC,UAAAC,OAAO,EAAI;IACzDX,gBAAgB,CAACW,OAAO,IAAI,IAAI,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EACN,IAAMC,eAAe,GAAGhG,UAAU,CAACqC,YAAY,EAAEgD,SAAS,EAAEQ,qBAAqB,CAAC;EAClFhG,KAAK,CAACmF,SAAS,CAAC,YAAM;IACpB,IAAIvC,SAAS,EAAE;MACb4C,SAAS,CAACY,OAAO,CAACC,KAAK,EAAE;IAC3B;EACF,CAAC,EAAE,CAACzD,SAAS,CAAC,CAAC;EAEf,IAAM0D,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAGC,MAAM,EAAI;IACjCrB,cAAc,CAACqB,MAAM,CAAC;IACtBzC,mBAAmB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,mBAAmB,CAACyC,MAAM,CAAC;EACpE,CAAC;EAED,IAAAC,UAAA,GASIhG,SAAS,CAAC;MACZgF,SAAS,EAAEW,eAAe;MAC1BhD,YAAY,EAAZA,YAAY;MACZrB,QAAQ,EAAEwB,YAAY;MACtBG,SAAS,EAATA,SAAS;MACTgD,QAAQ,EAAE,KAAK;MACf5C,QAAQ,EAARA,QAAQ;MACR6C,YAAY,EAAEJ,gBAAgB;MAC9BvE,IAAI,EAAE4B,WAAW;MACjBgB,OAAO,EAAPA,OAAO;MACPX,iBAAiB,EAAjBA,iBAAiB;MACjBxC,KAAK,EAAE2C;IACT,CAAC,CAAC;IApBAwC,YAAY,GAAAH,UAAA,CAAZG,YAAY;IACZC,kBAAkB,GAAAJ,UAAA,CAAlBI,kBAAkB;IAClB9E,QAAQ,GAAA0E,UAAA,CAAR1E,QAAQ;IACR+E,cAAc,GAAAL,UAAA,CAAdK,cAAc;IACdC,eAAe,GAAAN,UAAA,CAAfM,eAAe;IACfC,cAAc,GAAAP,UAAA,CAAdO,cAAc;IACdC,cAAc,GAAAR,UAAA,CAAdQ,cAAc;IACdxF,KAAK,GAAAgF,UAAA,CAALhF,KAAK;EAeP,IAAMI,UAAU,GAAG/B,QAAQ,CAAC,CAAC,CAAC,EAAE0C,KAAK,EAAE;IACrCV,MAAM,EAAE8E,YAAY;IACpBtD,kBAAkB,EAAlBA,kBAAkB;IAClBvB,QAAQ,EAARA,QAAQ;IACRE,YAAY,EAAE4E,kBAAkB;IAChC7E,IAAI,EAAE4B,WAAW;IACjBO,WAAW,EAAXA,WAAW;IACX1C,KAAK,EAALA;EACF,CAAC,CAAC;EAEF,IAAMyF,OAAO,GAAGtF,iBAAiB,CAACC,UAAU,CAAC;EAC7C,IAAMR,cAAc,GAAGpB,KAAK,CAAC4E,OAAO,CAAC,YAAM;IACzC,IAAIsC,aAAa;IAEjB,OAAO,CAACA,aAAa,GAAGvC,OAAO,CAACwC,IAAI,CAAC,UAAAC,CAAC;MAAA,OAAI5F,KAAK,KAAK4F,CAAC,CAAC5F,KAAK;IAAA,EAAC,KAAK,IAAI,GAAG0F,aAAa,GAAG,IAAI;EAC9F,CAAC,EAAE,CAACvC,OAAO,EAAEnD,KAAK,CAAC,CAAC;EACpB,IAAM6F,WAAW,GAAG5G,YAAY,CAAC;IAC/B6G,WAAW,EAAE3B,MAAM;IACnB4B,YAAY,EAAEV,cAAc;IAC5BW,iBAAiB,EAAEtE,eAAe,CAAChB,IAAI;IACvCuF,sBAAsB,EAAErD,KAAK;IAC7BxC,UAAU,EAAVA,UAAU;IACV8F,SAAS,EAAET,OAAO,CAAC/E;EACrB,CAAC,CAAC;EACF,IAAMyF,YAAY,GAAGlH,YAAY,CAAC;IAChC6G,WAAW,EAAEzB,WAAW;IACxB0B,YAAY,EAAET,eAAe;IAC7BU,iBAAiB,EAAEtE,eAAe,CAACf,OAAO;IAC1CyF,eAAe,EAAE;MACfC,GAAG,EAAEnC;IACP,CAAC;IACD9D,UAAU,EAAVA,UAAU;IACV8F,SAAS,EAAET,OAAO,CAAC9E;EACrB,CAAC,CAAC;EACF,IAAM2F,WAAW,GAAGrH,YAAY,CAAC;IAC/B6G,WAAW,EAAEvB,MAAM;IACnByB,iBAAiB,EAAEtE,eAAe,CAACd,MAAM;IACzCwF,eAAe,EAAE;MACfG,QAAQ,EAAEvC,SAAS,CAACY,OAAO;MAC3B4B,aAAa,EAAE,IAAI;MACnBjG,IAAI,EAAE4B,WAAW;MACjBsE,SAAS,EAAE,cAAc;MACzBC,IAAI,EAAEC;IACR,CAAC;IACDvG,UAAU,EAAVA,UAAU;IACV8F,SAAS,EAAET,OAAO,CAAC7E;EACrB,CAAC,CAAC;EACF,IAAMgG,OAAO,GAAG;IACdrB,cAAc,EAAdA,cAAc;IACdC,cAAc,EAAdA,cAAc;IACdtB,UAAU,EAAVA;EACF,CAAC;EACD,OAAO,aAAaxE,KAAK,CAAClB,KAAK,CAACqI,QAAQ,EAAE;IACxCxF,QAAQ,EAAE,CAAC,aAAa7B,IAAI,CAAC2E,MAAM,EAAE9F,QAAQ,CAAC,CAAC,CAAC,EAAEwH,WAAW,EAAE;MAC7DxE,QAAQ,EAAEqB,WAAW,CAAC9C,cAAc;IACtC,CAAC,CAAC,CAAC,EAAEkE,aAAa,IAAI,aAAatE,IAAI,CAAC+E,MAAM,EAAElG,QAAQ,CAAC,CAAC,CAAC,EAAEiI,WAAW,EAAE;MACxEjF,QAAQ,EAAE,aAAa7B,IAAI,CAAC6E,WAAW,EAAEhG,QAAQ,CAAC,CAAC,CAAC,EAAE8H,YAAY,EAAE;QAClE9E,QAAQ,EAAE,aAAa7B,IAAI,CAACL,qBAAqB,CAAC2H,QAAQ,EAAE;UAC1D9G,KAAK,EAAE4G,OAAO;UACdvF,QAAQ,EAAEA;QACZ,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC,EAAEe,IAAI,IAAI,aAAa5C,IAAI,CAAC,OAAO,EAAE;MACtCuH,IAAI,EAAE,QAAQ;MACd3E,IAAI,EAAEA,IAAI;MACVpC,KAAK,EAAEgC,kBAAkB,CAACpC,cAAc;IAC1C,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AACFoH,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGrG,cAAc,CAACsG;AACvD,yBACE;EACA;EACA;EACA;EACA;;EAEA;AACF;AACA;AACA;EACE/F,SAAS,EAAE3C,SAAS,CAAC2I,IAAI;EAEzB;AACF;AACA;EACE/F,QAAQ,EAAE5C,SAAS,CAAC4I,IAAI;EAExB;AACF;AACA;AACA;EACE/F,SAAS,EAAE7C,SAAS,CAACqH,WAAW;EAEhC;AACF;AACA;AACA;AACA;EACEtE,UAAU,EAAE/C;EACZ,sCACC6I,KAAK,CAAC;IACLhD,OAAO,EAAE7F,SAAS,CAACqH,WAAW;IAC9BvB,MAAM,EAAE9F,SAAS,CAACqH,WAAW;IAC7B1B,IAAI,EAAE3F,SAAS,CAACqH;EAClB,CAAC,CAAC;EAEF;AACF;AACA;AACA;EACEpE,eAAe,EAAEjD,SAAS,CAAC6I,KAAK,CAAC;IAC/B3G,OAAO,EAAElC,SAAS,CAAC8I,SAAS,CAAC,CAAC9I,SAAS,CAAC+I,IAAI,EAAE/I,SAAS,CAACgJ,MAAM,CAAC,CAAC;IAChE7G,MAAM,EAAEnC,SAAS,CAAC8I,SAAS,CAAC,CAAC9I,SAAS,CAAC+I,IAAI,EAAE/I,SAAS,CAACgJ,MAAM,CAAC,CAAC;IAC/D/G,IAAI,EAAEjC,SAAS,CAAC8I,SAAS,CAAC,CAAC9I,SAAS,CAAC+I,IAAI,EAAE/I,SAAS,CAACgJ,MAAM,CAAC;EAC9D,CAAC,CAAC;EAEF;AACF;AACA;AACA;EACE5F,kBAAkB,EAAEpD,SAAS,CAAC2I,IAAI;EAElC;AACF;AACA;EACEzF,YAAY,EAAElD,SAAS,CAACiJ,GAAG;EAE3B;AACF;AACA;AACA;EACEpH,QAAQ,EAAE7B,SAAS,CAAC2I,IAAI;EAExB;AACF;AACA;AACA;AACA;EACEpF,kBAAkB,EAAEvD,SAAS,CAAC+I,IAAI;EAElC;AACF;AACA;AACA;EACEvF,SAAS,EAAExD,SAAS,CAACkJ,MAAM;EAE3B;AACF;AACA;AACA;EACExF,WAAW,EAAE1D,SAAS,CAAC2I,IAAI;EAE3B;AACF;AACA;AACA;EACEhF,IAAI,EAAE3D,SAAS,CAACkJ,MAAM;EAEtB;AACF;AACA;EACEtF,QAAQ,EAAE5D,SAAS,CAAC+I,IAAI;EAExB;AACF;AACA;AACA;EACElF,mBAAmB,EAAE7D,SAAS,CAAC+I,IAAI;EAEnC;AACF;AACA;AACA;AACA;AACA;AACA;EACEhF,iBAAiB,EAAE/D,SAAS,CAAC+I,IAAI;EAEjC;AACF;AACA;EACE9E,WAAW,EAAEjE,SAAS,CAAC+I,IAAI;EAE3B;AACF;AACA;AACA;EACExH,KAAK,EAAEvB,SAAS,CAACiJ;AACnB,CAAC,GAAG,KAAK,CAAC;AACV,eAAe7G,cAAc"},"metadata":{},"sourceType":"module"}